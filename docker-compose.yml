version: "3.3"

services:
  web:
    build: .
    container_name: internal_service_platform
    command: bash -c "
      ./manage.py collectstatic --noinput &&
      ./manage.py migrate  &&
      gunicorn -b 0.0.0.0:8001 internal_service_platform.wsgi:application"
    restart: always
    ports:
      - "8001:8001"
    depends_on:
      - db
      - redis
    env_file:
      - .env
    volumes:
      - .:/usr/src/app
      - ./static:/usr/src/app/static
      - ./media:/usr/src/app/media
    networks:
      - internal_platform_network

  db:
    image: postgres:latest
    container_name: postgres_container
    restart: always
    env_file:
      - .env
    volumes:
      - pg_data:/var/lib/postgresql/data/
    networks:
      - internal_platform_network

  pg_admin:
    image: dpage/pgadmin4
    container_name: pgadmin_container
    restart: always
    env_file:
      - .env
    ports:
      - "5050:5050"
    depends_on:
      - db
    networks:
      - internal_platform_network

  nginx:
    build:
      dockerfile: ./Dockerfile
      context: ./docker/nginx/
    container_name: nginx_container
    restart: always
    volumes:
      - ./static:/usr/src/app/static
      - ./media:/usr/src/app/media
      - ./docker/nginx/letsencrypt:/etc/letsencrypt
      - ./docker/nginx/www:/var/www/certbot
    networks:
      - internal_platform_network
    depends_on:
      - certbot
      - web
    ports:
      - "81:80"

  certbot:
    image: certbot/certbot
    container_name: certbot_container
    restart: always
    entrypoint: /bin/sh -c 'trap exit TERM; while :; do certbot certonly --webroot -w /var/www/certbot -d fregi.pp.ua --agree-tos --email admin@fregi.pp.ua --non-interactive --renew-by-default; sleep 12h & wait $${!}; done;'
    volumes:
      - ./docker/nginx/letsencrypt:/etc/letsencrypt
      - ./docker/nginx/log:/var/log/letsencrypt
      - ./docker/nginx/www:/var/www/certbot
    networks:
      - internal_platform_network

  redis:
    image: redis:latest
    container_name: redis_container
    restart: always
    networks:
      - internal_platform_network

  celery_worker:
    build: .
    container_name: celery_worker
    command: celery -A internal_service_platform worker --loglevel=info
    depends_on:
      - redis
      - db
    env_file:
      - .env
    volumes:
      - .:/usr/src/app
    networks:
      - internal_platform_network

  celery_beat:
    build: .
    container_name: celery_beat
    command: celery -A internal_service_platform beat --loglevel=info
    depends_on:
      - redis
      - db
    env_file:
      - .env
    volumes:
      - .:/usr/src/app
    networks:
      - internal_platform_network

networks:
  internal_platform_network:
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.120.0/24

volumes:
  pg_data:
  static_volume:
  media_volume:
